{"ast":null,"code":"const ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nconst initialState = {\n  cartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\")\n};\nexport default function cartReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      return {\n        cartItems: action.payload.cartItems\n      };\n\n    case REMOVE_FROM_CART:\n      return {\n        cartItems: action.payload.cartItems\n      };\n\n    default:\n      return state;\n  }\n}\n;\n\nconst setAddToCart = cart => ({\n  type: ADD_TO_CART,\n  payload: cart\n});\n\nconst setRemoveFromeCart = cart => ({\n  type: REMOVE_FROM_CART,\n  payload: cart\n}); // Functions=======================================================================\n\n\nexport const addToCart = product => {\n  return async (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice();\n    debugger;\n    let alreadyExists = false;\n    cartItems.forEach(x => {\n      if (x.id === product.id) {\n        alreadyExists = true;\n        x.count++;\n      }\n    });\n\n    if (!alreadyExists) {\n      cartItems.push({ ...product,\n        count: 1\n      });\n    }\n\n    dispatch(setAddToCart({\n      cartItems\n    }));\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n};\nexport const removeFromCart = product => {\n  return async (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice().filter(x => x.id !== product.id);\n    dispatch(setRemoveFromeCart({\n      cartItems\n    }));\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n};\nexport const removeOneFromCart = product => {\n  return async (dispatch, getState) => {\n    let cartItems = getState().cart.cartItems.slice();\n    const exist = cartItems.find(x => x.id === product.id);\n\n    if (exist.count === 1) {\n      cartItems = cartItems.filter(x => x.id !== product.id);\n    } else {\n      cartItems = cartItems.map(x => x.id === product.id ? { ...exist,\n        count: exist.count - 1\n      } : x);\n    }\n\n    dispatch(setRemoveFromeCart({\n      cartItems\n    }));\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n};","map":{"version":3,"sources":["/home/yesiaw/Projects/GiLabProject/canteen_frontend/src/pages/cart/ducks/reducer.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","initialState","cartItems","JSON","parse","localStorage","getItem","cartReducer","state","action","type","payload","setAddToCart","cart","setRemoveFromeCart","addToCart","product","dispatch","getState","slice","alreadyExists","forEach","x","id","count","push","setItem","stringify","removeFromCart","filter","removeOneFromCart","exist","find","map"],"mappings":"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","sourcesContent":["const ADD_TO_CART = \"ADD_TO_CART\";\nconst REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n\nconst initialState = {\n\tcartItems: JSON.parse(localStorage.getItem(\"cartItems\") || \"[]\") \n};\n\nexport default function cartReducer( state = initialState, action ) {\n    switch (action.type) {\n      case ADD_TO_CART:\n        return { cartItems: action.payload.cartItems };\n      case REMOVE_FROM_CART:\n        return { cartItems: action.payload.cartItems };\n      default:\n        return state;\n    }\n};\n\nconst setAddToCart = (cart) => ({ type: ADD_TO_CART, payload: cart });\nconst setRemoveFromeCart = (cart) => ({ type: REMOVE_FROM_CART, payload: cart });\n\n\n// Functions=======================================================================\nexport const addToCart = (product) => {\n  \n\treturn async (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.slice()\n    debugger\n    let alreadyExists = false;\n    cartItems.forEach((x) => {\n      if (x.id === product.id) {\n        alreadyExists = true;\n        x.count++;\n      }\n    });\n    if (!alreadyExists) {\n      cartItems.push({ ...product, count: 1 });\n    }\n    dispatch(setAddToCart({cartItems}));\n    localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n\t};\n};\n\nexport const removeFromCart = (product) => {\n    return async (dispatch, getState) => {\n        const cartItems = getState().cart.cartItems.slice().filter((x) => x.id !== product.id);\n        dispatch(setRemoveFromeCart({cartItems}));\n        localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n    };\n}\n\nexport const removeOneFromCart = (product) => {\n  return async (dispatch, getState) => {\n      let cartItems = getState().cart.cartItems.slice();\n      const exist = cartItems.find((x) => x.id === product.id);\n      if (exist.count === 1) {\n        cartItems = cartItems.filter((x) => x.id !== product.id);        \n      } else {\n        cartItems = cartItems.map((x) => x.id === product.id ? { ...exist, count: exist.count - 1 } : x )\n      }\n      dispatch(setRemoveFromeCart({cartItems}));\n      localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\n  };\n}\n\n"]},"metadata":{},"sourceType":"module"}