{"ast":null,"code":"var _jsxFileName = \"/home/yesiaw/GitLabProgect/src/pages/dishes/horizontalScroll/scroll.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport cx from './scroll.module.css';\nimport * as queryString from 'querystring';\nimport { Link } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HorizontalScroll = props => {\n  _s();\n\n  const history = useHistory(); // debugger\n\n  const activatedItem = id => {\n    // debugger\n    for (let i = 1; i <= props.categories.length; i++) {\n      if (i == id) {\n        document.getElementById(`scrollCont${id}`).classList.add(cx.ScrollItemActive);\n      } else {\n        document.getElementById(`scrollCont${i}`).classList.remove(cx.ScrollItemActive);\n      }\n    }\n\n    document.addEventListener('scroll', () => {\n      let scrollDistance = window.scrollY;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cx.ScrollContainer,\n    children: props.categories.map(el => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: el.id,\n        smooth: false,\n        duration: 500,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          id: `scrollCont${el.id}`,\n          onClick: () => {\n            activatedItem(el.id);\n          },\n          className: cx.ScrollItem,\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HorizontalScroll, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = HorizontalScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalScroll\");","map":{"version":3,"sources":["/home/yesiaw/GitLabProgect/src/pages/dishes/horizontalScroll/scroll.js"],"names":["React","NavLink","useHistory","useParams","cx","queryString","Link","HorizontalScroll","props","history","activatedItem","id","i","categories","length","document","getElementById","classList","add","ScrollItemActive","remove","addEventListener","scrollDistance","window","scrollY","ScrollContainer","map","el","ScrollItem","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,OAAOC,EAAP,MAAe,qBAAf;AACA,OAAO,KAAKC,WAAZ,MAA6B,aAA7B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEvC,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CAFuC,CAGvC;;AAEA,QAAMQ,aAAa,GAAIC,EAAD,IAAQ;AAC1B;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,KAAK,CAACK,UAAN,CAAiBC,MAAtC,EAA8CF,CAAC,EAA/C,EAAmD;AAC/C,UAAIA,CAAC,IAAID,EAAT,EAAa;AACTI,QAAAA,QAAQ,CAACC,cAAT,CAAyB,aAAYL,EAAG,EAAxC,EAA2CM,SAA3C,CAAqDC,GAArD,CAAyDd,EAAE,CAACe,gBAA5D;AAEH,OAHD,MAGO;AACHJ,QAAAA,QAAQ,CAACC,cAAT,CAAyB,aAAYJ,CAAE,EAAvC,EAA0CK,SAA1C,CAAoDG,MAApD,CAA2DhB,EAAE,CAACe,gBAA9D;AACH;AACJ;;AACDJ,IAAAA,QAAQ,CAACM,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACtC,UAAIC,cAAc,GAAGC,MAAM,CAACC,OAA5B;AAGH,KAJD;AAMH,GAhBD;;AAmBA,sBAEI;AAAK,IAAA,SAAS,EAAEpB,EAAE,CAACqB,eAAnB;AAAA,cACKjB,KAAK,CAACK,UAAN,CAAiBa,GAAjB,CAAsBC,EAAD,IAAQ;AAC1B,0BAAO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,EAAE,CAAChB,EAAb;AAAiB,QAAA,MAAM,EAAE,KAAzB;AAAgC,QAAA,QAAQ,EAAE,GAA1C;AAAA,qCAAgD;AAAQ,UAAA,EAAE,EAAG,aAAYgB,EAAE,CAAChB,EAAG,EAA/B;AAAkC,UAAA,OAAO,EAAE,MAAM;AAAED,YAAAA,aAAa,CAACiB,EAAE,CAAChB,EAAJ,CAAb;AAAsB,WAAzE;AAA2E,UAAA,SAAS,EAAEP,EAAE,CAACwB,UAAzF;AAAA,oBAClDD,EAAE,CAACE;AAD+C;AAAA;AAAA;AAAA;AAAA,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANA;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CAzCM;;GAAMtB,gB;UAEOL,U;;;KAFPK,gB","sourcesContent":["import React from 'react'\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\nimport cx from './scroll.module.css'\nimport * as queryString from 'querystring'\nimport { Link } from 'react-scroll'\n\n\nexport const HorizontalScroll = (props) => {\n\n    const history = useHistory();\n    // debugger\n\n    const activatedItem = (id) => {\n        // debugger\n        for (let i = 1; i <= props.categories.length; i++) {\n            if (i == id) {\n                document.getElementById(`scrollCont${id}`).classList.add(cx.ScrollItemActive)\n\n            } else {\n                document.getElementById(`scrollCont${i}`).classList.remove(cx.ScrollItemActive)\n            }\n        }\n        document.addEventListener('scroll', () => {\n            let scrollDistance = window.scrollY;\n            \n    \n        })\n\n    }\n\n    \n    return (\n\n        <div className={cx.ScrollContainer}>\n            {props.categories.map((el) => {\n                return <Link to={el.id} smooth={false} duration={500}> <button id={`scrollCont${el.id}`} onClick={() => { activatedItem(el.id) }} className={cx.ScrollItem}>\n                    {el.name}\n                </button></Link>\n\n\n            })}\n\n\n        </div>\n\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}