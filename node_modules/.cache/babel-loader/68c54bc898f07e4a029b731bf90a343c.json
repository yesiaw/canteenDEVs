{"ast":null,"code":"var _jsxFileName = \"/home/yesiaw/GitLabProgect/src/pages/dishes/horizontalScroll/scroll.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink, useHistory, useParams } from 'react-router-dom';\nimport cx from './scroll.module.css';\nimport * as queryString from 'querystring';\nimport { Link } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HorizontalScroll = props => {\n  _s();\n\n  const history = useHistory(); // debugger\n\n  const pushURL = id => {\n    history.push({\n      pathname: `/category/dishes`,\n      search: `?dish=${id}`\n    });\n    props.setPages(id);\n    document.getElementById('scrollCont').scrollBy(10, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"scrollCont\",\n    className: cx.ScrollContainer,\n    children: props.categories.map(el => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: el.name,\n        smooth: true,\n        duration: 2000,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            pushURL(el.id);\n          },\n          className: cx.ScrollItem,\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 80\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HorizontalScroll, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = HorizontalScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalScroll\");","map":{"version":3,"sources":["/home/yesiaw/GitLabProgect/src/pages/dishes/horizontalScroll/scroll.js"],"names":["React","NavLink","useHistory","useParams","cx","queryString","Link","HorizontalScroll","props","history","pushURL","id","push","pathname","search","setPages","document","getElementById","scrollBy","ScrollContainer","categories","map","el","name","ScrollItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,SAA9B,QAA+C,kBAA/C;AACA,OAAOC,EAAP,MAAe,qBAAf;AACA,OAAO,KAAKC,WAAZ,MAA6B,aAA7B;AACA,SAASC,IAAT,QAAqB,cAArB;;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAAA;;AAEvC,QAAMC,OAAO,GAAGP,UAAU,EAA1B,CAFuC,CAGvC;;AAEI,QAAMQ,OAAO,GAAIC,EAAD,IAAQ;AACpBF,IAAAA,OAAO,CAACG,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAG,kBADF;AAETC,MAAAA,MAAM,EAAG,SAAQH,EAAG;AAFX,KAAb;AAKAH,IAAAA,KAAK,CAACO,QAAN,CAAeJ,EAAf;AACAK,IAAAA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,QAAtC,CAA+C,EAA/C,EAAmD,CAAnD;AAGH,GAVD;;AAWJ,sBAEI;AAAK,IAAA,EAAE,EAAG,YAAV;AAAuB,IAAA,SAAS,EAAEd,EAAE,CAACe,eAArC;AAAA,cACKX,KAAK,CAACY,UAAN,CAAiBC,GAAjB,CAAsBC,EAAD,IAAQ;AAC1B,0BAAO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAIA,EAAE,CAACC,IAAf;AAAqB,QAAA,MAAM,EAAI,IAA/B;AAAqC,QAAA,QAAQ,EAAI,IAAjD;AAAA,qCAAwD;AAAQ,UAAA,OAAO,EAAI,MAAM;AAACb,YAAAA,OAAO,CAACY,EAAE,CAACX,EAAJ,CAAP;AAAe,WAAzC;AAA2C,UAAA,SAAS,EAAEP,EAAE,CAACoB,UAAzD;AAAA,oBAC1DF,EAAE,CAACC;AADuD;AAAA;AAAA;AAAA;AAAA,gBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH,KANA;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CAjCM;;GAAMhB,gB;UAEOL,U;;;KAFPK,gB","sourcesContent":["import React from 'react'\nimport { NavLink, useHistory, useParams } from 'react-router-dom'\nimport cx from './scroll.module.css'\nimport * as queryString from 'querystring'\nimport { Link } from 'react-scroll'\n\n\nexport const HorizontalScroll = (props) => {\n    \n    const history = useHistory();\n    // debugger\n\n        const pushURL = (id) => {\n            history.push({\n                pathname: `/category/dishes`,\n                search: `?dish=${id}`,\n                \n            })\n            props.setPages(id);\n            document.getElementById('scrollCont').scrollBy(10, 0)\n            \n            \n        }\n    return (\n\n        <div id = 'scrollCont' className={cx.ScrollContainer}>\n            {props.categories.map((el) => {\n                return <Link to = {el.name} smooth = {true} duration = {2000}> <button onClick = {() => {pushURL(el.id)}} className={cx.ScrollItem}>\n                    {el.name}\n                </button></Link>\n\n\n            })}\n\n\n        </div>\n\n\n\n    )\n}"]},"metadata":{},"sourceType":"module"}