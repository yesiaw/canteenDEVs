{"ast":null,"code":"import { getDishes } from \"../../../api\";\nconst SET_DISH = \"SET_DISH\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\nconst initialState = {\n  isFetching: true,\n  dishes: []\n};\nexport default function dishReducer(state = initialState, action) {\n  // debugger\n  switch (action.type) {\n    case SET_DISH:\n      if (state.dishes.length === 0) {\n        return { ...state,\n          dishes: action.payload,\n          isFetching: false\n        };\n      } else {\n        return { ...state,\n          dishes: [{ ...state.dishes,\n            dishes: action.payload\n          }]\n        };\n      }\n\n    case SET_IS_FETCHING:\n      return { ...state,\n        isFetching: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setDish = dish => ({\n  type: SET_DISH,\n  payload: dish\n});\nexport const setIsFetching = bool => ({\n  type: SET_IS_FETCHING,\n  payload: bool\n});\nexport const getDish = id => {\n  return async dispatch => {\n    dispatch(setIsFetching(true));\n    const response = await getDishes(id);\n    dispatch(setDish(response)); // debugger\n  };\n};","map":{"version":3,"sources":["/home/yesiaw/GitLabProgect/src/pages/dishes/ducks/reducer.js"],"names":["getDishes","SET_DISH","SET_IS_FETCHING","initialState","isFetching","dishes","dishReducer","state","action","type","length","payload","setDish","dish","setIsFetching","bool","getDish","id","dispatch","response"],"mappings":"AAAA,SAASA,SAAT,QAA0B,cAA1B;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAArB;AAKA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGJ,YAA7B,EAA2CK,MAA3C,EAAmD;AACjE;AACA,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,QAAL;AACC,UAAGM,KAAK,CAACF,MAAN,CAAaK,MAAb,KAAwB,CAA3B,EAA6B;AAC5B,eAAO,EAAE,GAAGH,KAAL;AAAaF,UAAAA,MAAM,EAACG,MAAM,CAACG,OAA3B;AAAqCP,UAAAA,UAAU,EAAE;AAAjD,SAAP;AACA,OAFD,MAEK;AACJ,eAAM,EACL,GAAGG,KADE;AAELF,UAAAA,MAAM,EAAE,CAAC,EAAC,GAAGE,KAAK,CAACF,MAAV;AAAkBA,YAAAA,MAAM,EAAEG,MAAM,CAACG;AAAjC,WAAD;AAFH,SAAN;AAIA;;AACF,SAAKT,eAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,UAAU,EAAEI,MAAM,CAACG;AAA/B,OAAP;;AACD;AACC,aAAOJ,KAAP;AAbF;AAeA;AAED,OAAO,MAAMK,OAAO,GAAIC,IAAD,KAAW;AAAEJ,EAAAA,IAAI,EAAER,QAAR;AAAkBU,EAAAA,OAAO,EAAEE;AAA3B,CAAX,CAAhB;AACP,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACvCN,EAAAA,IAAI,EAAEP,eADiC;AAEvCS,EAAAA,OAAO,EAAEI;AAF8B,CAAX,CAAtB;AAKP,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQ;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CAACJ,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,UAAMK,QAAQ,GAAG,MAAMnB,SAAS,CAACiB,EAAD,CAAhC;AACAC,IAAAA,QAAQ,CAACN,OAAO,CAACO,QAAD,CAAR,CAAR,CAH0B,CAI1B;AACA,GALD;AAMA,CAPM","sourcesContent":["import { getDishes } from \"../../../api\";\n\nconst SET_DISH = \"SET_DISH\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\n\nconst initialState = {\n\tisFetching: true,\n\tdishes: [],\n};\n\nexport default function dishReducer(state = initialState, action) {\n\t// debugger\n\tswitch (action.type) {\n\t\tcase SET_DISH:\n\t\t\tif(state.dishes.length === 0){\n\t\t\t\treturn { ...state,  dishes:action.payload , isFetching: false };\n\t\t\t}else{\n\t\t\t\treturn{\n\t\t\t\t\t...state,\n\t\t\t\t\tdishes: [{...state.dishes, dishes: action.payload}]\n\t\t\t\t}\n\t\t\t}\n\t\tcase SET_IS_FETCHING:\n\t\t\treturn { ...state, isFetching: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const setDish = (dish) => ({ type: SET_DISH, payload: dish });\nexport const setIsFetching = (bool) => ({\n\ttype: SET_IS_FETCHING,\n\tpayload: bool,\n});\n\nexport const getDish = (id) => {\n\treturn async (dispatch) => {\n\t\tdispatch(setIsFetching(true));\n\t\tconst response = await getDishes(id);\n\t\tdispatch(setDish(response));\n\t\t// debugger\n\t};\n};\n\n"]},"metadata":{},"sourceType":"module"}