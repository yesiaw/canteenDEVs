{"ast":null,"code":"import { getCategory } from \"../../../../api\";\nconst SET_CATEGORY = \"SET_CATEGORY\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\nconst initialState = {\n  isFetching: true,\n  categories: []\n};\nexport default function categoryReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_CATEGORY:\n      return { ...state,\n        categories: action.payload,\n        isFetching: false\n      };\n\n    case SET_IS_FETCHING:\n      return { ...state,\n        isFetching: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setCategory = category => ({\n  type: SET_CATEGORY,\n  payload: category\n});\nexport const setIsFetching = bool => ({\n  type: SET_IS_FETCHING,\n  payload: bool\n});\nexport const getCat = () => {\n  return async dispatch => {\n    dispatch(setIsFetching(true));\n    const response = await getCategory();\n    dispatch(setCategory(response.data));\n  };\n};","map":{"version":3,"sources":["/home/yesiaw/GitLabProgect/src/pages/main/categories/ducks/reducer.js"],"names":["getCategory","SET_CATEGORY","SET_IS_FETCHING","initialState","isFetching","categories","categoryReducer","state","action","type","payload","setCategory","category","setIsFetching","bool","getCat","dispatch","response","data"],"mappings":"AAAA,SAASA,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,UAAU,EAAE;AAFQ,CAArB;AAKA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGJ,YAAjC,EAA+CK,MAA/C,EAAuD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,YAAL;AACC,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,UAAU,EAAEG,MAAM,CAACE,OAA/B;AAAwCN,QAAAA,UAAU,EAAE;AAApD,OAAP;;AACD,SAAKF,eAAL;AACC,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAA/B,OAAP;;AACD;AACC,aAAOH,KAAP;AANF;AAQA;AAED,OAAO,MAAMI,WAAW,GAAIC,QAAD,KAAe;AACzCH,EAAAA,IAAI,EAAER,YADmC;AAEzCS,EAAAA,OAAO,EAAEE;AAFgC,CAAf,CAApB;AAIP,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACvCL,EAAAA,IAAI,EAAEP,eADiC;AAEvCQ,EAAAA,OAAO,EAAEI;AAF8B,CAAX,CAAtB;AAKP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AAC1BA,IAAAA,QAAQ,CAACH,aAAa,CAAC,IAAD,CAAd,CAAR;AACA,UAAMI,QAAQ,GAAG,MAAMjB,WAAW,EAAlC;AACAgB,IAAAA,QAAQ,CAACL,WAAW,CAACM,QAAQ,CAACC,IAAV,CAAZ,CAAR;AACA,GAJD;AAKA,CANM","sourcesContent":["import { getCategory } from \"../../../../api\";\n\nconst SET_CATEGORY = \"SET_CATEGORY\";\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\";\n\nconst initialState = {\n\tisFetching: true,\n\tcategories: [],\n};\n\nexport default function categoryReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_CATEGORY:\n\t\t\treturn { ...state, categories: action.payload, isFetching: false };\n\t\tcase SET_IS_FETCHING:\n\t\t\treturn { ...state, isFetching: action.payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const setCategory = (category) => ({\n\ttype: SET_CATEGORY,\n\tpayload: category,\n});\nexport const setIsFetching = (bool) => ({\n\ttype: SET_IS_FETCHING,\n\tpayload: bool,\n});\n\nexport const getCat = () => {\n\treturn async (dispatch) => {\n\t\tdispatch(setIsFetching(true));\n\t\tconst response = await getCategory();\n\t\tdispatch(setCategory(response.data));\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}